{"ast":null,"code":"var _jsxFileName = \"/Users/georgigeorgiev/Desktop/webSApp/materials/car-management-frontend/src/components/MaintenanceList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, Container, Card, Form, Row, Col } from \"react-bootstrap\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaintenanceList = () => {\n  _s();\n  const [maintenances, setMaintenances] = useState([]);\n  const [cars, setCars] = useState([]);\n  const [garages, setGarages] = useState([]);\n  const [monthlyReportData, setMonthlyReportData] = useState([]);\n  const [filterGarageId, setFilterGarageId] = useState(\"\");\n  const [filterCarId, setFilterCarId] = useState(\"\");\n  const [filterStartDate, setFilterStartDate] = useState(\"\");\n  const [filterEndDate, setFilterEndDate] = useState(\"\");\n  const [reportFilter, setReportFilter] = useState({\n    garageId: \"\",\n    startDate: \"\",\n    endDate: \"\"\n  });\n  const [monthlyReportFilter, setMonthlyReportFilter] = useState({\n    garageId: \"\",\n    startMonth: \"\",\n    endMonth: \"\"\n  });\n  const [newMaintenance, setNewMaintenance] = useState({\n    serviceType: \"\",\n    scheduledDate: \"\",\n    garageId: \"\",\n    carId: \"\"\n  });\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [maintenanceToUpdate, setMaintenanceToUpdate] = useState(null);\n  const [newRecord, setNewRecord] = useState({\n    serviceType: \"\",\n    scheduledDate: \"\",\n    garageId: \"\",\n    carId: \"\"\n  });\n  const [startMonth, setStartMonth] = useState(new Date());\n  const [endMonth, setEndMonth] = useState(new Date());\n  const [recordToUpdate, setRecordToUpdate] = useState(null);\n  const fetchMaintenances = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8088/maintenance\", {\n        params: {\n          carId: filterCarId || undefined,\n          garageId: filterGarageId || undefined,\n          startDate: reportFilter.startDate || undefined,\n          endDate: reportFilter.endDate || undefined\n        }\n      });\n      const [garagesResponse, carsResponse] = await Promise.all([axios.get(\"http://localhost:8088/garages\"), axios.get(\"http://localhost:8088/cars\")]);\n      const garages = garagesResponse.data;\n      const cars = carsResponse.data;\n      const enrichedMaintenances = response.data.map(maintenance => {\n        const garage = garages.find(g => g.id === maintenance.garageId) || {};\n        const car = cars.find(c => c.id === maintenance.carId) || {};\n        return {\n          ...maintenance,\n          garageName: garage.name || \"N/A\",\n          carName: car.make ? `${car.make} ${car.model}` : \"N/A\"\n        };\n      });\n      setMaintenances(enrichedMaintenances);\n    } catch (error) {\n      console.error(\"Error fetching maintenances:\", error);\n    }\n  };\n  const fetchCars = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8088/cars\");\n      setCars(response.data);\n    } catch (error) {\n      console.error(\"Error fetching cars:\", error);\n    }\n  };\n  const fetchGarages = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8088/garages\");\n      setGarages(response.data);\n    } catch (error) {\n      console.error(\"Error fetching garages:\", error);\n    }\n  };\n  const handleReportFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setReportFilter(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAddMaintenance = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:8088/maintenance\", newRecord);\n      alert(\"Record added successfully!\");\n    } catch (error) {\n      console.error(\"Error adding record:\", error);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (isUpdating) {\n      setMaintenanceToUpdate(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setNewMaintenance(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleAddRecord = async () => {\n    try {\n      if (!newMaintenance.startMonth || !newMaintenance.endMonth) {\n        alert(\"Please select both start and end month.\");\n        return;\n      }\n      const response = await axios.post(\"http://localhost:8088/maintenance\", newMaintenance);\n      alert(\"Record added successfully!\");\n      setMaintenances(prev => [...prev, response.data]);\n      setNewMaintenance({\n        serviceType: \"\",\n        scheduledDate: \"\",\n        startMonth: \"\",\n        endMonth: \"\",\n        garageId: \"\",\n        carId: \"\"\n      });\n      fetchMaintenances();\n    } catch (error) {\n      console.error(\"Error adding record:\", error);\n      alert(\"An error occurred while adding the record.\");\n    }\n  };\n  const handleUpdateRecord = async () => {\n    if (!recordToUpdate || !recordToUpdate.id) {\n      alert(\"No maintenance record selected for update.\");\n      return;\n    }\n    try {\n      await axios.put(`http://localhost:8088/maintenance/${recordToUpdate.id}`, recordToUpdate);\n      alert(\"Maintenance record updated successfully!\");\n      fetchRecords();\n      setIsUpdating(false);\n      setRecordToUpdate(null);\n    } catch (error) {\n      console.error(\"Error updating maintenance record:\", error);\n      alert(\"An error occurred while updating the record.\");\n    }\n  };\n  const handleDeleteMaintenance = async maintenanceId => {\n    if (window.confirm(\"Are you sure you want to delete this maintenance request?\")) {\n      try {\n        await axios.delete(`http://localhost:8088/maintenance/${maintenanceId}`);\n        alert(\"Maintenance request deleted successfully!\");\n        fetchMaintenances();\n      } catch (error) {\n        console.error(\"Error deleting maintenance:\", error);\n        alert(\"An error occurred while deleting the maintenance request.\");\n      }\n    }\n  };\n  const fetchMonthlyReport = async () => {\n    const {\n      garageId,\n      startMonth,\n      endMonth\n    } = monthlyReportFilter;\n    if (!garageId || !startMonth || !endMonth) {\n      alert(\"Please select all fields.\");\n      return;\n    }\n    console.log(\"Sending request with filter:\", {\n      garageId,\n      startMonth,\n      endMonth\n    });\n    try {\n      const response = await axios.get(\"http://localhost:8088/maintenance/monthlyRequestsReport\", {\n        params: {\n          garageId,\n          startMonth,\n          endMonth\n        }\n      });\n      if (response.data && response.data.length > 0) {\n        setMonthlyReportData(response.data);\n      } else {\n        setMonthlyReportData([]);\n        alert(\"No data available for the selected criteria.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching monthly report:\", error);\n    }\n  };\n  const handleGarageChange = e => {\n    setMonthlyReportFilter(prev => ({\n      ...prev,\n      garageId: e.target.value\n    }));\n  };\n  useEffect(() => {\n    fetchCars();\n    fetchGarages();\n  }, []);\n  useEffect(() => {\n    fetchMaintenances();\n  }, [filterCarId, filterGarageId, filterStartDate, filterEndDate, reportFilter]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        style: {\n          backgroundColor: \"#FFC107\",\n          color: \"#000000\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: \"Manage Maintenance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Filter by Car\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: filterCarId,\n                  onChange: e => setFilterCarId(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"All Cars\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 21\n                  }, this), cars.map(car => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: car.id,\n                    children: [car.make, \" \", car.model]\n                  }, car.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Filter by Garage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: filterGarageId,\n                  onChange: e => setFilterGarageId(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"All Garages\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 21\n                  }, this), garages.map(garage => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: garage.id,\n                    children: garage.name\n                  }, garage.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Start Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  name: \"startDate\",\n                  value: reportFilter.startDate,\n                  onChange: handleReportFilterChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"End Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  name: \"endDate\",\n                  value: reportFilter.endDate,\n                  onChange: handleReportFilterChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          responsive: true,\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            style: {\n              backgroundColor: \"#000000\",\n              color: \"#FFC107\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Service Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Garage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Car\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: maintenances.map((maintenance, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: maintenance.serviceType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: maintenance.scheduledDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: maintenance.garageName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: maintenance.carName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    backgroundColor: \"#FFC107\",\n                    border: \"none\",\n                    color: \"#000000\"\n                  },\n                  size: \"sm\",\n                  className: \"me-2\",\n                  onClick: () => setMaintenanceToUpdate(maintenance) || setIsUpdating(true),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    backgroundColor: \"#000000\",\n                    border: \"none\",\n                    color: \"#FFC107\"\n                  },\n                  size: \"sm\",\n                  onClick: () => handleDeleteMaintenance(maintenance.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)]\n            }, maintenance.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mt-4\",\n          children: isUpdating ? \"Update Maintenance Record\" : \"Add a New Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"type\",\n                  placeholder: \"Enter maintenance type\",\n                  value: isUpdating ? (recordToUpdate === null || recordToUpdate === void 0 ? void 0 : recordToUpdate.type) || \"\" : newRecord.type,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  name: \"date\",\n                  value: isUpdating ? (recordToUpdate === null || recordToUpdate === void 0 ? void 0 : recordToUpdate.date) || \"\" : newRecord.date,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Car\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"carId\",\n                  placeholder: \" car \",\n                  value: isUpdating ? (recordToUpdate === null || recordToUpdate === void 0 ? void 0 : recordToUpdate.carName) || \"\" : newRecord.carName,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              backgroundColor: \"#FFC107\",\n              border: \"none\",\n              color: \"#000000\"\n            },\n            className: \"w-100\",\n            onClick: isUpdating ? handleUpdateRecord : handleAddRecord,\n            children: isUpdating ? \"Update Record\" : \"Add Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mt-4\",\n          children: \"Monthly Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"align-items-end\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: true,\n                  children: \"Garage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: monthlyReportFilter.garageId,\n                  onChange: handleGarageChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select a garage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 21\n                  }, this), garages.map(garage => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: garage.id,\n                    children: garage.name\n                  }, garage.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Start:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ReactDatePicker, {\n                  selected: monthlyReportFilter.startMonth && /^\\d{4}-\\d{2}$/.test(monthlyReportFilter.startMonth) ? new Date(`${monthlyReportFilter.startMonth}-01`) : null,\n                  onChange: date => {\n                    if (date) {\n                      const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, \"0\")}`;\n                      setMonthlyReportFilter(prev => ({\n                        ...prev,\n                        startMonth: formattedDate\n                      }));\n                    }\n                  },\n                  dateFormat: \"yyyy-MM\",\n                  showMonthYearPicker: true,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"End:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ReactDatePicker, {\n                  selected: monthlyReportFilter.endMonth && /^\\d{4}-\\d{2}$/.test(monthlyReportFilter.endMonth) ? new Date(`${monthlyReportFilter.endMonth}-01`) : null,\n                  onChange: date => {\n                    if (date) {\n                      const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, \"0\")}`;\n                      setMonthlyReportFilter(prev => ({\n                        ...prev,\n                        endMonth: formattedDate\n                      }));\n                    }\n                  },\n                  dateFormat: \"yyyy-MM\",\n                  showMonthYearPicker: true,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              backgroundColor: \"#FFC107\",\n              border: \"none\",\n              color: \"#000000\"\n            },\n            className: \"w-100 mt-3\",\n            onClick: fetchMonthlyReport,\n            children: \"Generate Monthly Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          responsive: true,\n          className: \"text-center mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            style: {\n              backgroundColor: \"#000000\",\n              color: \"#FFC107\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Requests\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: monthlyReportData.length > 0 ? monthlyReportData.map((report, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: report.yearMonth || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: report.requests || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                children: \"No data available for the selected criteria.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(MaintenanceList, \"dFQyUgkaW2vz7PVopS3hsw7zl40=\");\n_c = MaintenanceList;\nexport default MaintenanceList;\nvar _c;\n$RefreshReg$(_c, \"MaintenanceList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Table","Button","Container","Card","Form","Row","Col","ReactDatePicker","jsxDEV","_jsxDEV","MaintenanceList","_s","maintenances","setMaintenances","cars","setCars","garages","setGarages","monthlyReportData","setMonthlyReportData","filterGarageId","setFilterGarageId","filterCarId","setFilterCarId","filterStartDate","setFilterStartDate","filterEndDate","setFilterEndDate","reportFilter","setReportFilter","garageId","startDate","endDate","monthlyReportFilter","setMonthlyReportFilter","startMonth","endMonth","newMaintenance","setNewMaintenance","serviceType","scheduledDate","carId","isUpdating","setIsUpdating","maintenanceToUpdate","setMaintenanceToUpdate","newRecord","setNewRecord","setStartMonth","Date","setEndMonth","recordToUpdate","setRecordToUpdate","fetchMaintenances","response","get","params","undefined","garagesResponse","carsResponse","Promise","all","data","enrichedMaintenances","map","maintenance","garage","find","g","id","car","c","garageName","name","carName","make","model","error","console","fetchCars","fetchGarages","handleReportFilterChange","e","value","target","prev","handleAddMaintenance","post","alert","handleChange","handleAddRecord","handleUpdateRecord","put","fetchRecords","handleDeleteMaintenance","maintenanceId","window","confirm","delete","fetchMonthlyReport","log","length","handleGarageChange","className","children","Header","style","backgroundColor","color","fileName","_jsxFileName","lineNumber","columnNumber","Body","md","Group","Label","Select","onChange","Control","type","striped","bordered","hover","responsive","index","border","size","onClick","placeholder","date","selected","test","formattedDate","getFullYear","getMonth","toString","padStart","dateFormat","showMonthYearPicker","report","yearMonth","requests","colSpan","_c","$RefreshReg$"],"sources":["/Users/georgigeorgiev/Desktop/webSApp/materials/car-management-frontend/src/components/MaintenanceList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, Container, Card, Form, Row, Col } from \"react-bootstrap\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst MaintenanceList = () => {\r\n  const [maintenances, setMaintenances] = useState([]);\r\n  const [cars, setCars] = useState([]);\r\n  const [garages, setGarages] = useState([]);\r\n  const [monthlyReportData, setMonthlyReportData] = useState([]);\r\n  const [filterGarageId, setFilterGarageId] = useState(\"\");\r\n  const [filterCarId, setFilterCarId] = useState(\"\");\r\n  const [filterStartDate, setFilterStartDate] = useState(\"\");\r\n  const [filterEndDate, setFilterEndDate] = useState(\"\");\r\n  const [reportFilter, setReportFilter] = useState({ garageId: \"\", startDate: \"\", endDate: \"\", });\r\n\r\n  const [monthlyReportFilter, setMonthlyReportFilter] = useState({\r\n    garageId: \"\",\r\n    startMonth: \"\",\r\n    endMonth: \"\",\r\n  });\r\n  const [newMaintenance, setNewMaintenance] = useState({\r\n    serviceType: \"\",\r\n    scheduledDate: \"\",\r\n    garageId: \"\",\r\n    carId: \"\",\r\n  });\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [maintenanceToUpdate, setMaintenanceToUpdate] = useState(null);\r\n  const [newRecord, setNewRecord] = useState({\r\n    serviceType: \"\",\r\n    scheduledDate: \"\",\r\n    garageId: \"\",\r\n    carId: \"\",\r\n  });\r\n  const [startMonth, setStartMonth] = useState(new Date());\r\n  const [endMonth, setEndMonth] = useState(new Date());\r\n  const [recordToUpdate, setRecordToUpdate] = useState(null);\r\n\r\n\r\n  const fetchMaintenances = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8088/maintenance\", {\r\n        params: {\r\n          carId: filterCarId || undefined,\r\n          garageId: filterGarageId || undefined,\r\n          startDate: reportFilter.startDate || undefined,\r\n          endDate: reportFilter.endDate || undefined,\r\n        },\r\n      });\r\n\r\n      const [garagesResponse, carsResponse] = await Promise.all([\r\n        axios.get(\"http://localhost:8088/garages\"),\r\n        axios.get(\"http://localhost:8088/cars\"),\r\n      ]);\r\n\r\n      const garages = garagesResponse.data;\r\n      const cars = carsResponse.data;\r\n\r\n      const enrichedMaintenances = response.data.map((maintenance) => {\r\n        const garage = garages.find((g) => g.id === maintenance.garageId) || {};\r\n        const car = cars.find((c) => c.id === maintenance.carId) || {};\r\n        return {\r\n          ...maintenance,\r\n          garageName: garage.name || \"N/A\",\r\n          carName: car.make ? `${car.make} ${car.model}` : \"N/A\",\r\n        };\r\n      });\r\n\r\n      setMaintenances(enrichedMaintenances);\r\n    } catch (error) {\r\n      console.error(\"Error fetching maintenances:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchCars = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8088/cars\");\r\n      setCars(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching cars:\", error);\r\n    }\r\n  };\r\n  const fetchGarages = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8088/garages\");\r\n      setGarages(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching garages:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleReportFilterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setReportFilter((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAddMaintenance = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8088/maintenance\", newRecord);\r\n      alert(\"Record added successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error adding record:\", error);\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (isUpdating) {\r\n      setMaintenanceToUpdate((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    } else {\r\n      setNewMaintenance((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleAddRecord = async () => {\r\n    try {\r\n      if (!newMaintenance.startMonth || !newMaintenance.endMonth) {\r\n        alert(\"Please select both start and end month.\");\r\n        return;\r\n      }\r\n\r\n      const response = await axios.post(\"http://localhost:8088/maintenance\", newMaintenance);\r\n\r\n      alert(\"Record added successfully!\");\r\n\r\n      setMaintenances((prev) => [...prev, response.data]);\r\n\r\n      setNewMaintenance({\r\n        serviceType: \"\",\r\n        scheduledDate: \"\",\r\n        startMonth: \"\",\r\n        endMonth: \"\",\r\n        garageId: \"\",\r\n        carId: \"\",\r\n      });\r\n      fetchMaintenances();\r\n    } catch (error) {\r\n      console.error(\"Error adding record:\", error);\r\n      alert(\"An error occurred while adding the record.\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateRecord = async () => {\r\n    if (!recordToUpdate || !recordToUpdate.id) {\r\n      alert(\"No maintenance record selected for update.\");\r\n      return;\r\n    }\r\n    try {\r\n      await axios.put(`http://localhost:8088/maintenance/${recordToUpdate.id}`, recordToUpdate);\r\n      alert(\"Maintenance record updated successfully!\");\r\n      fetchRecords();\r\n      setIsUpdating(false);\r\n      setRecordToUpdate(null);\r\n    } catch (error) {\r\n      console.error(\"Error updating maintenance record:\", error);\r\n      alert(\"An error occurred while updating the record.\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteMaintenance = async (maintenanceId) => {\r\n    if (window.confirm(\"Are you sure you want to delete this maintenance request?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:8088/maintenance/${maintenanceId}`);\r\n        alert(\"Maintenance request deleted successfully!\");\r\n        fetchMaintenances();\r\n      } catch (error) {\r\n        console.error(\"Error deleting maintenance:\", error);\r\n        alert(\"An error occurred while deleting the maintenance request.\");\r\n      }\r\n    }\r\n  };\r\n  const fetchMonthlyReport = async () => {\r\n    const { garageId, startMonth, endMonth } = monthlyReportFilter;\r\n\r\n    if (!garageId || !startMonth || !endMonth) {\r\n      alert(\"Please select all fields.\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"Sending request with filter:\", { garageId, startMonth, endMonth });\r\n\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8088/maintenance/monthlyRequestsReport\", {\r\n        params: { garageId, startMonth, endMonth },\r\n      });\r\n\r\n      if (response.data && response.data.length > 0) {\r\n        setMonthlyReportData(response.data);\r\n      } else {\r\n        setMonthlyReportData([]);\r\n        alert(\"No data available for the selected criteria.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching monthly report:\", error);\r\n    }\r\n  };\r\n\r\n  const handleGarageChange = (e) => {\r\n    setMonthlyReportFilter((prev) => ({\r\n      ...prev,\r\n      garageId: e.target.value,\r\n    }));\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchCars();\r\n    fetchGarages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMaintenances();\r\n  }, [filterCarId, filterGarageId, filterStartDate, filterEndDate, reportFilter]);\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <Card className=\"shadow-lg\">\r\n        <Card.Header style={{ backgroundColor: \"#FFC107\", color: \"#000000\" }}>\r\n          <h3 className=\"text-center\">Manage Maintenance</h3>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Form className=\"mb-3\">\r\n            <Row>\r\n              <Col md={3}>\r\n                <Form.Group>\r\n                  <Form.Label>Filter by Car</Form.Label>\r\n                  <Form.Select\r\n                    value={filterCarId}\r\n                    onChange={(e) => setFilterCarId(e.target.value)}\r\n                  >\r\n                    <option value=\"\">All Cars</option>\r\n                    {cars.map((car) => (\r\n                      <option key={car.id} value={car.id}>\r\n                        {car.make} {car.model}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={3}>\r\n                <Form.Group>\r\n                  <Form.Label>Filter by Garage</Form.Label>\r\n                  <Form.Select\r\n                    value={filterGarageId}\r\n                    onChange={(e) => setFilterGarageId(e.target.value)}\r\n                  >\r\n                    <option value=\"\">All Garages</option>\r\n                    {garages.map((garage) => (\r\n                      <option key={garage.id} value={garage.id}>\r\n                        {garage.name}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={3}>\r\n                <Form.Group>\r\n                  <Form.Label>Start Date</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    name=\"startDate\"\r\n                    value={reportFilter.startDate}\r\n                    onChange={handleReportFilterChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={3}>\r\n                <Form.Group>\r\n                  <Form.Label>End Date</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    name=\"endDate\"\r\n                    value={reportFilter.endDate}\r\n                    onChange={handleReportFilterChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Table striped bordered hover responsive className=\"text-center\">\r\n            <thead style={{ backgroundColor: \"#000000\", color: \"#FFC107\" }}>\r\n              <tr>\r\n                <th>Service Type</th>\r\n                <th>Date</th>\r\n                <th>Garage</th>\r\n                <th>Car</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {maintenances.map((maintenance, index) => (\r\n                <tr key={maintenance.id}>\r\n                  <td>{maintenance.serviceType}</td>\r\n                  <td>{maintenance.scheduledDate}</td>\r\n                  <td>{maintenance.garageName}</td>\r\n                  <td>{maintenance.carName}</td>\r\n                  <td>\r\n                    <Button\r\n                      style={{ backgroundColor: \"#FFC107\", border: \"none\", color: \"#000000\" }}\r\n                      size=\"sm\"\r\n                      className=\"me-2\"\r\n                      onClick={() => setMaintenanceToUpdate(maintenance) || setIsUpdating(true)}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      style={{ backgroundColor: \"#000000\", border: \"none\", color: \"#FFC107\" }}\r\n                      size=\"sm\"\r\n                      onClick={() => handleDeleteMaintenance(maintenance.id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <h4 className=\"mt-4\">{isUpdating ? \"Update Maintenance Record\" : \"Add a New Record\"}</h4>\r\n          <Form>\r\n            <Row>\r\n              <Col md={4}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Type</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"type\"\r\n                    placeholder=\"Enter maintenance type\"\r\n                    value={isUpdating ? recordToUpdate?.type || \"\" : newRecord.type}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={4}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Date</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    value={isUpdating ? recordToUpdate?.date || \"\" : newRecord.date}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={4}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Car</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"carId\"\r\n                    placeholder=\" car \"\r\n                    value={isUpdating ? recordToUpdate?.carName || \"\" : newRecord.carName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Button\r\n              style={{ backgroundColor: \"#FFC107\", border: \"none\", color: \"#000000\" }}\r\n              className=\"w-100\"\r\n              onClick={isUpdating ? handleUpdateRecord : handleAddRecord}\r\n            >\r\n              {isUpdating ? \"Update Record\" : \"Add Record\"}\r\n            </Button>\r\n          </Form>\r\n          <h4 className=\"mt-4\">Monthly Report</h4>\r\n          <Form className=\"mb-3\">\r\n            <Row className=\"align-items-end\">\r\n              <Col md={4}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label className>Garage</Form.Label>\r\n                  <Form.Select\r\n                    value={monthlyReportFilter.garageId}\r\n                    onChange={handleGarageChange}\r\n                  >\r\n                    <option value=\"\">Select a garage</option>\r\n                    {garages.map((garage) => (\r\n                      <option key={garage.id} value={garage.id}>\r\n                        {garage.name}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={4}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Start:</Form.Label>\r\n                  <ReactDatePicker\r\n                    selected={\r\n                      monthlyReportFilter.startMonth && /^\\d{4}-\\d{2}$/.test(monthlyReportFilter.startMonth)\r\n                        ? new Date(`${monthlyReportFilter.startMonth}-01`)\r\n                        : null\r\n                    }\r\n                    onChange={(date) => {\r\n                      if (date) {\r\n                        const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1)\r\n                          .toString()\r\n                          .padStart(2, \"0\")}`;\r\n                        setMonthlyReportFilter((prev) => ({ ...prev, startMonth: formattedDate }));\r\n                      }\r\n                    }}\r\n                    dateFormat=\"yyyy-MM\"\r\n                    showMonthYearPicker\r\n                    className=\"form-control\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={4}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label >End:</Form.Label>\r\n                  <ReactDatePicker\r\n                    selected={\r\n                      monthlyReportFilter.endMonth && /^\\d{4}-\\d{2}$/.test(monthlyReportFilter.endMonth)\r\n                        ? new Date(`${monthlyReportFilter.endMonth}-01`)\r\n                        : null\r\n                    }\r\n                    onChange={(date) => {\r\n                      if (date) {\r\n                        const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1)\r\n                          .toString()\r\n                          .padStart(2, \"0\")}`;\r\n                        setMonthlyReportFilter((prev) => ({ ...prev, endMonth: formattedDate }));\r\n                      }\r\n                    }}\r\n                    dateFormat=\"yyyy-MM\"\r\n                    showMonthYearPicker\r\n                    className=\"form-control\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Button\r\n              style={{ backgroundColor: \"#FFC107\", border: \"none\", color: \"#000000\" }}\r\n              className=\"w-100 mt-3\"\r\n              onClick={fetchMonthlyReport}\r\n            >\r\n              Generate Monthly Report\r\n            </Button>\r\n          </Form>\r\n          <Table striped bordered hover responsive className=\"text-center mt-4\">\r\n            <thead style={{ backgroundColor: \"#000000\", color: \"#FFC107\" }}>\r\n              <tr>\r\n                <th>Month</th>\r\n                <th>Requests</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {monthlyReportData.length > 0 ? (\r\n                monthlyReportData.map((report, index) => (\r\n                  <tr key={index}>\r\n                    <td>{report.yearMonth || \"N/A\"}</td>\r\n                    <td>{report.requests || 0}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"3\">No data available for the selected criteria.</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MaintenanceList;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,MAAM,EAAEC,SAAS,EAAEC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAChF,OAAOC,eAAe,MAAM,kBAAkB;AAC9C,OAAO,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2B,eAAe,EAAEC,kBAAkB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC;IAAEiC,QAAQ,EAAE,EAAE;IAAEC,SAAS,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAI,CAAC,CAAC;EAE/F,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGrC,QAAQ,CAAC;IAC7DiC,QAAQ,EAAE,EAAE;IACZK,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGzC,QAAQ,CAAC;IACnD0C,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE,EAAE;IACjBV,QAAQ,EAAE,EAAE;IACZW,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC+C,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhD,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACiD,SAAS,EAAEC,YAAY,CAAC,GAAGlD,QAAQ,CAAC;IACzC0C,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE,EAAE;IACjBV,QAAQ,EAAE,EAAE;IACZW,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACN,UAAU,EAAEa,aAAa,CAAC,GAAGnD,QAAQ,CAAC,IAAIoD,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAACb,QAAQ,EAAEc,WAAW,CAAC,GAAGrD,QAAQ,CAAC,IAAIoD,IAAI,CAAC,CAAC,CAAC;EACpD,MAAM,CAACE,cAAc,EAAEC,iBAAiB,CAAC,GAAGvD,QAAQ,CAAC,IAAI,CAAC;EAG1D,MAAMwD,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMvD,KAAK,CAACwD,GAAG,CAAC,mCAAmC,EAAE;QACpEC,MAAM,EAAE;UACNf,KAAK,EAAEnB,WAAW,IAAImC,SAAS;UAC/B3B,QAAQ,EAAEV,cAAc,IAAIqC,SAAS;UACrC1B,SAAS,EAAEH,YAAY,CAACG,SAAS,IAAI0B,SAAS;UAC9CzB,OAAO,EAAEJ,YAAY,CAACI,OAAO,IAAIyB;QACnC;MACF,CAAC,CAAC;MAEF,MAAM,CAACC,eAAe,EAAEC,YAAY,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACxD9D,KAAK,CAACwD,GAAG,CAAC,+BAA+B,CAAC,EAC1CxD,KAAK,CAACwD,GAAG,CAAC,4BAA4B,CAAC,CACxC,CAAC;MAEF,MAAMvC,OAAO,GAAG0C,eAAe,CAACI,IAAI;MACpC,MAAMhD,IAAI,GAAG6C,YAAY,CAACG,IAAI;MAE9B,MAAMC,oBAAoB,GAAGT,QAAQ,CAACQ,IAAI,CAACE,GAAG,CAAEC,WAAW,IAAK;QAC9D,MAAMC,MAAM,GAAGlD,OAAO,CAACmD,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,WAAW,CAACnC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACvE,MAAMwC,GAAG,GAAGxD,IAAI,CAACqD,IAAI,CAAEI,CAAC,IAAKA,CAAC,CAACF,EAAE,KAAKJ,WAAW,CAACxB,KAAK,CAAC,IAAI,CAAC,CAAC;QAC9D,OAAO;UACL,GAAGwB,WAAW;UACdO,UAAU,EAAEN,MAAM,CAACO,IAAI,IAAI,KAAK;UAChCC,OAAO,EAAEJ,GAAG,CAACK,IAAI,GAAG,GAAGL,GAAG,CAACK,IAAI,IAAIL,GAAG,CAACM,KAAK,EAAE,GAAG;QACnD,CAAC;MACH,CAAC,CAAC;MAEF/D,eAAe,CAACkD,oBAAoB,CAAC;IACvC,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMzB,QAAQ,GAAG,MAAMvD,KAAK,CAACwD,GAAG,CAAC,4BAA4B,CAAC;MAC9DxC,OAAO,CAACuC,QAAQ,CAACQ,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EACD,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAM1B,QAAQ,GAAG,MAAMvD,KAAK,CAACwD,GAAG,CAAC,+BAA+B,CAAC;MACjEtC,UAAU,CAACqC,QAAQ,CAACQ,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAGD,MAAMI,wBAAwB,GAAIC,CAAC,IAAK;IACtC,MAAM;MAAET,IAAI;MAAEU;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCvD,eAAe,CAAEwD,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACZ,IAAI,GAAGU;IAAM,CAAC,CAAC,CAAC;EACzD,CAAC;EAED,MAAMG,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMhC,QAAQ,GAAG,MAAMvD,KAAK,CAACwF,IAAI,CAAC,mCAAmC,EAAEzC,SAAS,CAAC;MACjF0C,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EACD,MAAMY,YAAY,GAAIP,CAAC,IAAK;IAC1B,MAAM;MAAET,IAAI;MAAEU;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChC,IAAI1C,UAAU,EAAE;MACdG,sBAAsB,CAAEwC,IAAI,KAAM;QAChC,GAAGA,IAAI;QACP,CAACZ,IAAI,GAAGU;MACV,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACL7C,iBAAiB,CAAE+C,IAAI,KAAM;QAC3B,GAAGA,IAAI;QACP,CAACZ,IAAI,GAAGU;MACV,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMO,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,IAAI,CAACrD,cAAc,CAACF,UAAU,IAAI,CAACE,cAAc,CAACD,QAAQ,EAAE;QAC1DoD,KAAK,CAAC,yCAAyC,CAAC;QAChD;MACF;MAEA,MAAMlC,QAAQ,GAAG,MAAMvD,KAAK,CAACwF,IAAI,CAAC,mCAAmC,EAAElD,cAAc,CAAC;MAEtFmD,KAAK,CAAC,4BAA4B,CAAC;MAEnC3E,eAAe,CAAEwE,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE/B,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAEnDxB,iBAAiB,CAAC;QAChBC,WAAW,EAAE,EAAE;QACfC,aAAa,EAAE,EAAE;QACjBL,UAAU,EAAE,EAAE;QACdC,QAAQ,EAAE,EAAE;QACZN,QAAQ,EAAE,EAAE;QACZW,KAAK,EAAE;MACT,CAAC,CAAC;MACFY,iBAAiB,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CW,KAAK,CAAC,4CAA4C,CAAC;IACrD;EACF,CAAC;EAED,MAAMG,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACxC,cAAc,IAAI,CAACA,cAAc,CAACkB,EAAE,EAAE;MACzCmB,KAAK,CAAC,4CAA4C,CAAC;MACnD;IACF;IACA,IAAI;MACF,MAAMzF,KAAK,CAAC6F,GAAG,CAAC,qCAAqCzC,cAAc,CAACkB,EAAE,EAAE,EAAElB,cAAc,CAAC;MACzFqC,KAAK,CAAC,0CAA0C,CAAC;MACjDK,YAAY,CAAC,CAAC;MACdlD,aAAa,CAAC,KAAK,CAAC;MACpBS,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1DW,KAAK,CAAC,8CAA8C,CAAC;IACvD;EACF,CAAC;EAED,MAAMM,uBAAuB,GAAG,MAAOC,aAAa,IAAK;IACvD,IAAIC,MAAM,CAACC,OAAO,CAAC,2DAA2D,CAAC,EAAE;MAC/E,IAAI;QACF,MAAMlG,KAAK,CAACmG,MAAM,CAAC,qCAAqCH,aAAa,EAAE,CAAC;QACxEP,KAAK,CAAC,2CAA2C,CAAC;QAClDnC,iBAAiB,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOwB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDW,KAAK,CAAC,2DAA2D,CAAC;MACpE;IACF;EACF,CAAC;EACD,MAAMW,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAM;MAAErE,QAAQ;MAAEK,UAAU;MAAEC;IAAS,CAAC,GAAGH,mBAAmB;IAE9D,IAAI,CAACH,QAAQ,IAAI,CAACK,UAAU,IAAI,CAACC,QAAQ,EAAE;MACzCoD,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;IAEAV,OAAO,CAACsB,GAAG,CAAC,8BAA8B,EAAE;MAAEtE,QAAQ;MAAEK,UAAU;MAAEC;IAAS,CAAC,CAAC;IAE/E,IAAI;MACF,MAAMkB,QAAQ,GAAG,MAAMvD,KAAK,CAACwD,GAAG,CAAC,yDAAyD,EAAE;QAC1FC,MAAM,EAAE;UAAE1B,QAAQ;UAAEK,UAAU;UAAEC;QAAS;MAC3C,CAAC,CAAC;MAEF,IAAIkB,QAAQ,CAACQ,IAAI,IAAIR,QAAQ,CAACQ,IAAI,CAACuC,MAAM,GAAG,CAAC,EAAE;QAC7ClF,oBAAoB,CAACmC,QAAQ,CAACQ,IAAI,CAAC;MACrC,CAAC,MAAM;QACL3C,oBAAoB,CAAC,EAAE,CAAC;QACxBqE,KAAK,CAAC,8CAA8C,CAAC;MACvD;IACF,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,MAAMyB,kBAAkB,GAAIpB,CAAC,IAAK;IAChChD,sBAAsB,CAAEmD,IAAI,KAAM;MAChC,GAAGA,IAAI;MACPvD,QAAQ,EAAEoD,CAAC,CAACE,MAAM,CAACD;IACrB,CAAC,CAAC,CAAC;EACL,CAAC;EAGDrF,SAAS,CAAC,MAAM;IACdiF,SAAS,CAAC,CAAC;IACXC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAENlF,SAAS,CAAC,MAAM;IACduD,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAAC/B,WAAW,EAAEF,cAAc,EAAEI,eAAe,EAAEE,aAAa,EAAEE,YAAY,CAAC,CAAC;EAE/E,oBACEnB,OAAA,CAACP,SAAS;IAACqG,SAAS,EAAC,MAAM;IAAAC,QAAA,eACzB/F,OAAA,CAACN,IAAI;MAACoG,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACzB/F,OAAA,CAACN,IAAI,CAACsG,MAAM;QAACC,KAAK,EAAE;UAAEC,eAAe,EAAE,SAAS;UAAEC,KAAK,EAAE;QAAU,CAAE;QAAAJ,QAAA,eACnE/F,OAAA;UAAI8F,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAkB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACdvG,OAAA,CAACN,IAAI,CAAC8G,IAAI;QAAAT,QAAA,gBACR/F,OAAA,CAACL,IAAI;UAACmG,SAAS,EAAC,MAAM;UAAAC,QAAA,eACpB/F,OAAA,CAACJ,GAAG;YAAAmG,QAAA,gBACF/F,OAAA,CAACH,GAAG;cAAC4G,EAAE,EAAE,CAAE;cAAAV,QAAA,eACT/F,OAAA,CAACL,IAAI,CAAC+G,KAAK;gBAAAX,QAAA,gBACT/F,OAAA,CAACL,IAAI,CAACgH,KAAK;kBAAAZ,QAAA,EAAC;gBAAa;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACtCvG,OAAA,CAACL,IAAI,CAACiH,MAAM;kBACVlC,KAAK,EAAE7D,WAAY;kBACnBgG,QAAQ,EAAGpC,CAAC,IAAK3D,cAAc,CAAC2D,CAAC,CAACE,MAAM,CAACD,KAAK,CAAE;kBAAAqB,QAAA,gBAEhD/F,OAAA;oBAAQ0E,KAAK,EAAC,EAAE;oBAAAqB,QAAA,EAAC;kBAAQ;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EACjClG,IAAI,CAACkD,GAAG,CAAEM,GAAG,iBACZ7D,OAAA;oBAAqB0E,KAAK,EAAEb,GAAG,CAACD,EAAG;oBAAAmC,QAAA,GAChClC,GAAG,CAACK,IAAI,EAAC,GAAC,EAACL,GAAG,CAACM,KAAK;kBAAA,GADVN,GAAG,CAACD,EAAE;oBAAAwC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEX,CACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACS,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACNvG,OAAA,CAACH,GAAG;cAAC4G,EAAE,EAAE,CAAE;cAAAV,QAAA,eACT/F,OAAA,CAACL,IAAI,CAAC+G,KAAK;gBAAAX,QAAA,gBACT/F,OAAA,CAACL,IAAI,CAACgH,KAAK;kBAAAZ,QAAA,EAAC;gBAAgB;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACzCvG,OAAA,CAACL,IAAI,CAACiH,MAAM;kBACVlC,KAAK,EAAE/D,cAAe;kBACtBkG,QAAQ,EAAGpC,CAAC,IAAK7D,iBAAiB,CAAC6D,CAAC,CAACE,MAAM,CAACD,KAAK,CAAE;kBAAAqB,QAAA,gBAEnD/F,OAAA;oBAAQ0E,KAAK,EAAC,EAAE;oBAAAqB,QAAA,EAAC;kBAAW;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EACpChG,OAAO,CAACgD,GAAG,CAAEE,MAAM,iBAClBzD,OAAA;oBAAwB0E,KAAK,EAAEjB,MAAM,CAACG,EAAG;oBAAAmC,QAAA,EACtCtC,MAAM,CAACO;kBAAI,GADDP,MAAM,CAACG,EAAE;oBAAAwC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEd,CACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACS,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACNvG,OAAA,CAACH,GAAG;cAAC4G,EAAE,EAAE,CAAE;cAAAV,QAAA,eACT/F,OAAA,CAACL,IAAI,CAAC+G,KAAK;gBAAAX,QAAA,gBACT/F,OAAA,CAACL,IAAI,CAACgH,KAAK;kBAAAZ,QAAA,EAAC;gBAAU;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACnCvG,OAAA,CAACL,IAAI,CAACmH,OAAO;kBACXC,IAAI,EAAC,MAAM;kBACX/C,IAAI,EAAC,WAAW;kBAChBU,KAAK,EAAEvD,YAAY,CAACG,SAAU;kBAC9BuF,QAAQ,EAAErC;gBAAyB;kBAAA4B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACNvG,OAAA,CAACH,GAAG;cAAC4G,EAAE,EAAE,CAAE;cAAAV,QAAA,eACT/F,OAAA,CAACL,IAAI,CAAC+G,KAAK;gBAAAX,QAAA,gBACT/F,OAAA,CAACL,IAAI,CAACgH,KAAK;kBAAAZ,QAAA,EAAC;gBAAQ;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACjCvG,OAAA,CAACL,IAAI,CAACmH,OAAO;kBACXC,IAAI,EAAC,MAAM;kBACX/C,IAAI,EAAC,SAAS;kBACdU,KAAK,EAAEvD,YAAY,CAACI,OAAQ;kBAC5BsF,QAAQ,EAAErC;gBAAyB;kBAAA4B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACPvG,OAAA,CAACT,KAAK;UAACyH,OAAO;UAACC,QAAQ;UAACC,KAAK;UAACC,UAAU;UAACrB,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC9D/F,OAAA;YAAOiG,KAAK,EAAE;cAAEC,eAAe,EAAE,SAAS;cAAEC,KAAK,EAAE;YAAU,CAAE;YAAAJ,QAAA,eAC7D/F,OAAA;cAAA+F,QAAA,gBACE/F,OAAA;gBAAA+F,QAAA,EAAI;cAAY;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrBvG,OAAA;gBAAA+F,QAAA,EAAI;cAAI;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbvG,OAAA;gBAAA+F,QAAA,EAAI;cAAM;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfvG,OAAA;gBAAA+F,QAAA,EAAI;cAAG;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACZvG,OAAA;gBAAA+F,QAAA,EAAI;cAAO;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRvG,OAAA;YAAA+F,QAAA,EACG5F,YAAY,CAACoD,GAAG,CAAC,CAACC,WAAW,EAAE4D,KAAK,kBACnCpH,OAAA;cAAA+F,QAAA,gBACE/F,OAAA;gBAAA+F,QAAA,EAAKvC,WAAW,CAAC1B;cAAW;gBAAAsE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAClCvG,OAAA;gBAAA+F,QAAA,EAAKvC,WAAW,CAACzB;cAAa;gBAAAqE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpCvG,OAAA;gBAAA+F,QAAA,EAAKvC,WAAW,CAACO;cAAU;gBAAAqC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjCvG,OAAA;gBAAA+F,QAAA,EAAKvC,WAAW,CAACS;cAAO;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC9BvG,OAAA;gBAAA+F,QAAA,gBACE/F,OAAA,CAACR,MAAM;kBACLyG,KAAK,EAAE;oBAAEC,eAAe,EAAE,SAAS;oBAAEmB,MAAM,EAAE,MAAM;oBAAElB,KAAK,EAAE;kBAAU,CAAE;kBACxEmB,IAAI,EAAC,IAAI;kBACTxB,SAAS,EAAC,MAAM;kBAChByB,OAAO,EAAEA,CAAA,KAAMnF,sBAAsB,CAACoB,WAAW,CAAC,IAAItB,aAAa,CAAC,IAAI,CAAE;kBAAA6D,QAAA,EAC3E;gBAED;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACTvG,OAAA,CAACR,MAAM;kBACLyG,KAAK,EAAE;oBAAEC,eAAe,EAAE,SAAS;oBAAEmB,MAAM,EAAE,MAAM;oBAAElB,KAAK,EAAE;kBAAU,CAAE;kBACxEmB,IAAI,EAAC,IAAI;kBACTC,OAAO,EAAEA,CAAA,KAAMlC,uBAAuB,CAAC7B,WAAW,CAACI,EAAE,CAAE;kBAAAmC,QAAA,EACxD;gBAED;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA,GArBE/C,WAAW,CAACI,EAAE;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAsBnB,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACRvG,OAAA;UAAI8F,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAE9D,UAAU,GAAG,2BAA2B,GAAG;QAAkB;UAAAmE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzFvG,OAAA,CAACL,IAAI;UAAAoG,QAAA,gBACH/F,OAAA,CAACJ,GAAG;YAAAmG,QAAA,gBACF/F,OAAA,CAACH,GAAG;cAAC4G,EAAE,EAAE,CAAE;cAAAV,QAAA,eACT/F,OAAA,CAACL,IAAI,CAAC+G,KAAK;gBAACZ,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBAC1B/F,OAAA,CAACL,IAAI,CAACgH,KAAK;kBAAAZ,QAAA,EAAC;gBAAI;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC7BvG,OAAA,CAACL,IAAI,CAACmH,OAAO;kBACXC,IAAI,EAAC,MAAM;kBACX/C,IAAI,EAAC,MAAM;kBACXwD,WAAW,EAAC,wBAAwB;kBACpC9C,KAAK,EAAEzC,UAAU,GAAG,CAAAS,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEqE,IAAI,KAAI,EAAE,GAAG1E,SAAS,CAAC0E,IAAK;kBAChEF,QAAQ,EAAE7B;gBAAa;kBAAAoB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACNvG,OAAA,CAACH,GAAG;cAAC4G,EAAE,EAAE,CAAE;cAAAV,QAAA,eACT/F,OAAA,CAACL,IAAI,CAAC+G,KAAK;gBAACZ,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBAC1B/F,OAAA,CAACL,IAAI,CAACgH,KAAK;kBAAAZ,QAAA,EAAC;gBAAI;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC7BvG,OAAA,CAACL,IAAI,CAACmH,OAAO;kBACXC,IAAI,EAAC,MAAM;kBACX/C,IAAI,EAAC,MAAM;kBACXU,KAAK,EAAEzC,UAAU,GAAG,CAAAS,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE+E,IAAI,KAAI,EAAE,GAAGpF,SAAS,CAACoF,IAAK;kBAChEZ,QAAQ,EAAE7B;gBAAa;kBAAAoB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACNvG,OAAA,CAACH,GAAG;cAAC4G,EAAE,EAAE,CAAE;cAAAV,QAAA,eACT/F,OAAA,CAACL,IAAI,CAAC+G,KAAK;gBAACZ,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBAC1B/F,OAAA,CAACL,IAAI,CAACgH,KAAK;kBAAAZ,QAAA,EAAC;gBAAG;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC5BvG,OAAA,CAACL,IAAI,CAACmH,OAAO;kBACXC,IAAI,EAAC,MAAM;kBACX/C,IAAI,EAAC,OAAO;kBACZwD,WAAW,EAAC,OAAO;kBACnB9C,KAAK,EAAEzC,UAAU,GAAG,CAAAS,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEuB,OAAO,KAAI,EAAE,GAAG5B,SAAS,CAAC4B,OAAQ;kBACtE4C,QAAQ,EAAE7B;gBAAa;kBAAAoB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNvG,OAAA,CAACR,MAAM;YACLyG,KAAK,EAAE;cAAEC,eAAe,EAAE,SAAS;cAAEmB,MAAM,EAAE,MAAM;cAAElB,KAAK,EAAE;YAAU,CAAE;YACxEL,SAAS,EAAC,OAAO;YACjByB,OAAO,EAAEtF,UAAU,GAAGiD,kBAAkB,GAAGD,eAAgB;YAAAc,QAAA,EAE1D9D,UAAU,GAAG,eAAe,GAAG;UAAY;YAAAmE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACPvG,OAAA;UAAI8F,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAAc;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxCvG,OAAA,CAACL,IAAI;UAACmG,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACpB/F,OAAA,CAACJ,GAAG;YAACkG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9B/F,OAAA,CAACH,GAAG;cAAC4G,EAAE,EAAE,CAAE;cAAAV,QAAA,eACT/F,OAAA,CAACL,IAAI,CAAC+G,KAAK;gBAACZ,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBAC1B/F,OAAA,CAACL,IAAI,CAACgH,KAAK;kBAACb,SAAS;kBAAAC,QAAA,EAAC;gBAAM;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACzCvG,OAAA,CAACL,IAAI,CAACiH,MAAM;kBACVlC,KAAK,EAAElD,mBAAmB,CAACH,QAAS;kBACpCwF,QAAQ,EAAEhB,kBAAmB;kBAAAE,QAAA,gBAE7B/F,OAAA;oBAAQ0E,KAAK,EAAC,EAAE;oBAAAqB,QAAA,EAAC;kBAAe;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EACxChG,OAAO,CAACgD,GAAG,CAAEE,MAAM,iBAClBzD,OAAA;oBAAwB0E,KAAK,EAAEjB,MAAM,CAACG,EAAG;oBAAAmC,QAAA,EACtCtC,MAAM,CAACO;kBAAI,GADDP,MAAM,CAACG,EAAE;oBAAAwC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEd,CACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACS,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACNvG,OAAA,CAACH,GAAG;cAAC4G,EAAE,EAAE,CAAE;cAAAV,QAAA,eACT/F,OAAA,CAACL,IAAI,CAAC+G,KAAK;gBAACZ,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBAC1B/F,OAAA,CAACL,IAAI,CAACgH,KAAK;kBAAAZ,QAAA,EAAC;gBAAM;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC/BvG,OAAA,CAACF,eAAe;kBACd4H,QAAQ,EACNlG,mBAAmB,CAACE,UAAU,IAAI,eAAe,CAACiG,IAAI,CAACnG,mBAAmB,CAACE,UAAU,CAAC,GAClF,IAAIc,IAAI,CAAC,GAAGhB,mBAAmB,CAACE,UAAU,KAAK,CAAC,GAChD,IACL;kBACDmF,QAAQ,EAAGY,IAAI,IAAK;oBAClB,IAAIA,IAAI,EAAE;sBACR,MAAMG,aAAa,GAAG,GAAGH,IAAI,CAACI,WAAW,CAAC,CAAC,IAAI,CAACJ,IAAI,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,EAChEC,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;sBACrBvG,sBAAsB,CAAEmD,IAAI,KAAM;wBAAE,GAAGA,IAAI;wBAAElD,UAAU,EAAEkG;sBAAc,CAAC,CAAC,CAAC;oBAC5E;kBACF,CAAE;kBACFK,UAAU,EAAC,SAAS;kBACpBC,mBAAmB;kBACnBpC,SAAS,EAAC;gBAAc;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACNvG,OAAA,CAACH,GAAG;cAAC4G,EAAE,EAAE,CAAE;cAAAV,QAAA,eACT/F,OAAA,CAACL,IAAI,CAAC+G,KAAK;gBAACZ,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBAC1B/F,OAAA,CAACL,IAAI,CAACgH,KAAK;kBAAAZ,QAAA,EAAE;gBAAI;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC9BvG,OAAA,CAACF,eAAe;kBACd4H,QAAQ,EACNlG,mBAAmB,CAACG,QAAQ,IAAI,eAAe,CAACgG,IAAI,CAACnG,mBAAmB,CAACG,QAAQ,CAAC,GAC9E,IAAIa,IAAI,CAAC,GAAGhB,mBAAmB,CAACG,QAAQ,KAAK,CAAC,GAC9C,IACL;kBACDkF,QAAQ,EAAGY,IAAI,IAAK;oBAClB,IAAIA,IAAI,EAAE;sBACR,MAAMG,aAAa,GAAG,GAAGH,IAAI,CAACI,WAAW,CAAC,CAAC,IAAI,CAACJ,IAAI,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,EAChEC,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;sBACrBvG,sBAAsB,CAAEmD,IAAI,KAAM;wBAAE,GAAGA,IAAI;wBAAEjD,QAAQ,EAAEiG;sBAAc,CAAC,CAAC,CAAC;oBAC1E;kBACF,CAAE;kBACFK,UAAU,EAAC,SAAS;kBACpBC,mBAAmB;kBACnBpC,SAAS,EAAC;gBAAc;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNvG,OAAA,CAACR,MAAM;YACLyG,KAAK,EAAE;cAAEC,eAAe,EAAE,SAAS;cAAEmB,MAAM,EAAE,MAAM;cAAElB,KAAK,EAAE;YAAU,CAAE;YACxEL,SAAS,EAAC,YAAY;YACtByB,OAAO,EAAE7B,kBAAmB;YAAAK,QAAA,EAC7B;UAED;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACPvG,OAAA,CAACT,KAAK;UAACyH,OAAO;UAACC,QAAQ;UAACC,KAAK;UAACC,UAAU;UAACrB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBACnE/F,OAAA;YAAOiG,KAAK,EAAE;cAAEC,eAAe,EAAE,SAAS;cAAEC,KAAK,EAAE;YAAU,CAAE;YAAAJ,QAAA,eAC7D/F,OAAA;cAAA+F,QAAA,gBACE/F,OAAA;gBAAA+F,QAAA,EAAI;cAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdvG,OAAA;gBAAA+F,QAAA,EAAI;cAAQ;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRvG,OAAA;YAAA+F,QAAA,EACGtF,iBAAiB,CAACmF,MAAM,GAAG,CAAC,GAC3BnF,iBAAiB,CAAC8C,GAAG,CAAC,CAAC4E,MAAM,EAAEf,KAAK,kBAClCpH,OAAA;cAAA+F,QAAA,gBACE/F,OAAA;gBAAA+F,QAAA,EAAKoC,MAAM,CAACC,SAAS,IAAI;cAAK;gBAAAhC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpCvG,OAAA;gBAAA+F,QAAA,EAAKoC,MAAM,CAACE,QAAQ,IAAI;cAAC;gBAAAjC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAFxBa,KAAK;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGV,CACL,CAAC,gBAEFvG,OAAA;cAAA+F,QAAA,eACE/F,OAAA;gBAAIsI,OAAO,EAAC,GAAG;gBAAAvC,QAAA,EAAC;cAA4C;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/D;UACL;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACrG,EAAA,CAldID,eAAe;AAAAsI,EAAA,GAAftI,eAAe;AAodrB,eAAeA,eAAe;AAAC,IAAAsI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}